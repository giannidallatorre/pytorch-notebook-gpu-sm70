name: Build Docker Image

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      if: ${{ !env.ACT }}
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Extract metadata for Docker tags
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  test:
    name: Test Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Run container and test
        run: |
          docker run --rm --user jovyan ghcr.io/${{ github.repository }}:latest /bin/bash -c "
            set -e
            # Explicitly set the PATH to include all necessary directories
            export PATH=\"/usr/local/julia/bin:/usr/bin:${PATH}\"
            echo '--- PATH ---'
            echo \$PATH
            # Python/PyTorch tests
            python3.10 -c 'import torch; print(torch.__version__); print(torch.cuda.is_available())'
            # Julia tests
            /usr/local/julia/bin/julia -e 'using Pkg; Pkg.add(\"IJulia\"); Pkg.add(\"CUDA\")'
            # Final check
            if ! /usr/local/julia/bin/julia -e 'using IJulia'; then
              echo \"Julia IJulia failed to load.\"
              exit 1
            fi
            echo \"Tests passed successfully!\"
          "
